# in_small_steps
Teaching myself programming in small steps. Each folder should be a FINISHED small project.

WHAT IS THIS?
This is a collection of small applications (usually written with C++/Qt/QML, but not always).
Each folder in the root directory should contain a small and FUNCTIONING project.
Those projects don't always contain something practically applicable in the real world, but that's not their purpose.
The real purpose here is to study some aspects of C++ or programming in general.
If the app in some folder doesn't work, it means it's not finished yet.
All the future apps in this project should be described here in this file.

1 - Calculator (MVC pattern)
A calculator based on Model-View-Controller pattern. 
The goal here is not to create a calculator per se, but to undestand the basics of MVC and SOLID.
Calculator should contain a "Number" field, number buttons, a comma, equal sign, reset buttons, and the basic arithmetic operations (+,-,*,/).
Nothing fancy is expected here. Do this in MVC, get SOLID where you can, and you're good to go.
When the change to calculator is done, increment the 3rd number. When some part is done, increment 2nd number. When the whole project is done,
increment 1st number.
NOTE TO SELF [TO REMOVE AFTER RESOLVED]: 
  - Operations are performed correctly at the moment, however, the long-term behavior still requires much refactoring;
  - Operation sequence and app behavior should be fully conformant to the standard MS Windows calculator.
  - After solving the operation sequence problem:
    a. Introduce floating point logic;
    b. Implement CA button;

2 - Effective Modern Cpp
This is a project created for the purpose of learning stuff from said book. Try to create a small program for each item to use it the way the book
wants you to, and to train the principle through practice.
Each item contains its own folder with a small project inside. When the project is updated, increment 3rd number. When the item is done, increment 
2nd number. When the whole book is done, increment 1st number.

3 - A TODO list application
A TODO list application that features one list where the user can put TODO items with future tasks they'd like to remember to do.
The application is written in C#/WPF. 
User Features:
+ ListBox with a collection of CheckBoxes (each of CheckBoxes corresponds to one task to do).
+ User can add new items.
+ User can edit existing items.
+ User can complete items (check the box on a CheckBox).
+ User can uncomplete items (uncheck the box on a CheckBox).
+ Drag and drop items to rearrange their positions.
Behind the scenes features:
+ Completing an item should:
  a. Move the item to the bottom of the list
  b. Grey the item out
  c. Cross the item out
+ Uncompleting an item should:
  a. Restore the item's color back to black
  b. Move the item up, to the bottom of the uncompleted part of the list
  c. Remove the strikethrough decoration.
+ Saving the items to a simple JSON on application termination and restore the saved tasks on startup
- Provide keyboard shortcuts for all the operations stated above.


by Oleksii <DarkSpectre> Kshenskyi.
